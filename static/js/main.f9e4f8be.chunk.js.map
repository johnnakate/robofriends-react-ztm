{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAYeA,EAXF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACvB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAMC,IAAI,SAASC,IAAG,+BAA4BH,EAA5B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCOLK,EAVE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAQ,cAAC,EAAD,CAAcT,GAAMK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA9DU,MAEvB,OACI,8BACIH,KCIGI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,+BACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGLI,EATA,SAACC,GACZ,OAEI,aADA,CACA,OAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKJ,EAAMK,YCaJC,E,kDAhBX,WAAYN,GAAO,IAAD,8BACd,gBACKO,MAAO,CACRC,UAAU,GAHA,E,qDAMlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,qCAEJG,KAAKX,MAAMK,a,GAdEQ,aC4CbC,G,wDAtCX,aAAc,IAAD,8BACT,gBAYJC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,SAZxC,EAAKX,MAAO,CACRnB,OAAQ,GACRM,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACfyB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACxB,OAAOmC,S,oBAQvC,WACI,MAA4BZ,KAAKJ,MAA1BnB,EAAP,EAAOA,OAAOM,EAAd,EAAcA,YACR8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQvC,EAAOyC,OAGX,sBAAK7C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU3B,OAAUoC,WAPxB,6C,GAzBUX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f9e4f8be.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card = ({name, email,id})=>{\r\n    return(\r\n        <div className='tc bg-light-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img  alt='robots' src = {`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user, i)=>{\r\n        return  <Card key={i} id = {robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    })\r\n    return(\r\n        <div>\r\n           {cardComponent}\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n      <div className='pa2'>\r\n        <input\r\n          className='pa3 ba b--pink bg-washed-red'\r\n          type='search'\r\n          placeholder='search robots'\r\n          onChange={searchChange}\r\n        /> \r\n      </div> \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n    return (\r\n        //javascript expression that has an object inside\r\n        <div style={{overflowY:'scroll',border:'1px solid black',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super();\r\n        this.state ={\r\n            hasError: false,\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Bad</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundary;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css'\r\n//import { robots } from './robots';\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            robots: [],\r\n            searchfield:'',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>this.setState({robots:users}));\r\n       \r\n    }\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield:event.target.value})\r\n       \r\n        \r\n    }\r\n    render(){\r\n        const {robots,searchfield}= this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ?\r\n        <h1>Loading</h1>:\r\n        (\r\n            <div className='tc'>\r\n            <h1 className='f2'>Robo Friends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n            <ErrorBoundary>\r\n            <CardList robots = {filteredRobots}/>\r\n            </ErrorBoundary>\r\n            </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n//import CardList from './CardList';\n//import {robots} from './robots';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}